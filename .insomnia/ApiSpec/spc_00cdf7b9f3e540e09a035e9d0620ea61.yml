_id: spc_00cdf7b9f3e540e09a035e9d0620ea61
type: ApiSpec
parentId: wrk_6b5acc1435164b17aad0f05d18d30285
modified: 1620103521158
created: 1620006060625
fileName: devfBackendProject
contents: "openapi: 3.0.0

  servers:

  \  - description: SwaggerHub API Auto Mocking

  \    url: https://virtserver.swaggerhub.com/reynerdev/DraegerService/1.0.0

  info:

  \  description: This is a simple API

  \  version: \"1.0.0\"

  \  title: Tinder Devf


  tags:

  \  - name: User

  \    description: Users that uses our Tinder Application

  \   \ 

  \  - name: Skill

  \    description: All the Skills available

  \   \ 

  \  - name: Clients

  \    description: Our ClientS\ 

  \   \ 

  \  - name: Request

  \    description: Request List betwenn User and Clients

  \   \ 

  \  - name: Review User

  \    description: Review from the Clients\ 

  \ \ 

  \  - name: Review Client

  \    description: Review from the User

  \   \ 

  \   \ 

  \   \ 

  paths:

  \  /user :

  \    get :

  \        tags:

  \          - User

  \        summary: Return a List of Users

  \        operationId: searchFSE

  \        description:  Obtain information about all users from the
  application database

  \        parameters:

  \          - name: bodyLimit

  \            in: query

  \            description:  The amount of Users returned

  \            schema:

  \              type: integer

  \              minimun: 10

  \              maximun: 20

  \              example: 15

  \             \ 

  \          - name: pageLimit

  \            in: query

  \            description:  The pages to return Users info

  \            schema:

  \              type: integer

  \              minimun: 1

  \              maximun: 5

  \              example: 2

  \        responses:

  \          '200' :

  \            description: Successful pull of Users info

  \            content:

  \              application/json:

  \                schema:

  \                  type: array

  \                  items:

  \                    $ref:  '#/components/schemas/User'                                 \
  \ 

  \    post :

  \      tags:\ 

  \        - User

  \      description: Creates a new User in the database

  \      requestBody:

  \        required: true

  \        content:

  \          application/json:

  \            schema:

  \              $ref:  '#/components/schemas/User'

  \             \ 

  \             \ 

  \  /user/{userid}:

  \    get:

  \      tags:\ 

  \        - User

  \      summary: Return the information about a User

  \      description: Obtain information about a User

  \      parameters:

  \        - name: User Id

  \        - in: path

  \          name: userid

  \          required: true

  \          schema:

  \            type: integer

  \            example: 3

  \      responses:

  \        '200':

  \          description: Succesfull pull from the User\ 

  \          content:\ 

  \            application/json:

  \              schema:

  \                $ref: '#/components/schemas/User'

  \     \ 

  \     \ 


  \                    \ 

  \                       \ 

  \                       \ 

  components:

  \  schemas:

  \    User:

  \      type: object

  \      properties:

  \        id:

  \          type: integer

  \          example: 4

  \        idurl:

  \          type: string

  \          example: /user/4

  \        username:

  \          type: string

  \          example: Reyner Loza

  \        lastname:

  \          type: string

  \          example: Loza Silva

  \        birthday:

  \          type: string

  \          example: 10/02/1995

  \        location:

  \          type: string

  \          example: '1020123.123123'

  \        rating:

  \          type: integer

  \          example: 4.2

  \        active:

  \          type: boolean

  \          example: true

  \        quantityRequest:

  \          type: integer

  \          example: 23

  \        createdat:

  \          type: string

  \          example: 12/10/2121

  \        clientpassword:

  \          type: string

  \          example: '21dfn893nfcjodaufuiodauif'

  \        skills:

  \          type: array

  \          items:

  \            $ref: '#/components/schemas/Skill'



  \    Skill:

  \      type: object

  \      properties:

  \        id:

  \          type: integer

  \          example: 12

  \        idurl:

  \          type: string

  \          example: '/skill/212'

  \        price:

  \          type: integer

  \          example: 55

  \        rating:

  \          type: integer

  \          example: 3

  \        minimunDowPayment:

  \          type: integer

  \          example: 20

  \        available:

  \          type: boolean

  \          example: true

  \   \ 

  \   \ 

  \   \ 

  \    "
contentType: yaml
